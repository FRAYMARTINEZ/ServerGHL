{"ast":null,"code":"var _jsxFileName = \"D:\\\\podoscope\\\\src\\\\signIn\\\\SignIn.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CryptoJS from 'crypto-js';\nimport PropTypes from 'prop-types';\nimport { baseUrl, genericGet } from '../utils/requestsManager';\nimport logo from '../assets/logo_piesalud.png';\nexport default class SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      failed: false\n    };\n    this.verifyAuth = this.verifyAuth.bind(this);\n    const storedSID = localStorage.getItem('sid');\n\n    if (storedSID && storedSID !== 'undefined') {\n      this.props.authTrue(true);\n    }\n  }\n\n  serializeObject(obj) {\n    const str = [];\n    Object.entries(obj).forEach(e => {\n      if (Object.prototype.hasOwnProperty.call(obj, e[0])) {\n        if (typeof e[1] === 'object') {\n          str.push(e[0] + '=' + JSON.stringify(e[1]));\n        } else {\n          str.push(e[0] + '=' + e[1]);\n        }\n      }\n    });\n    return str.join('&');\n  }\n\n  verifyAuth() {\n    const host = baseUrl + '/service/v2/rest.php';\n    const queries = {\n      method: 'login',\n      input_type: 'JSON',\n      response_type: 'JSON',\n      rest_data: {\n        user_auth: {\n          user_name: this.state.username,\n          password: CryptoJS.MD5(this.state.password).toString()\n        },\n        application_name: '',\n        name_value_list: [{\n          name: 'notifyonsave',\n          value: 'true'\n        }]\n      }\n    };\n    const endpoint = `${host}?${this.serializeObject(queries)}`;\n    genericGet(endpoint, data => {\n      if (data.id) {\n        localStorage.setItem('sid', data.id);\n        this.props.authTrue(true);\n      } else {\n        this.setState({\n          failed: true\n        });\n      }\n    }, () => {\n      this.setState({\n        username: '',\n        password: '',\n        failed: true\n      });\n    }, false);\n  }\n\n  onEnter(e) {\n    if (e.key === 'Enter') {\n      this.verifyAuth();\n    }\n  }\n\n  render() {\n    return React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"logo piesalud\",\n      height: '150px',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"username\",\n      label: \"User name\",\n      name: \"username\" // autoComplete='email'\n      ,\n      value: this.state.username,\n      onChange: x => this.setState({\n        username: x.target.value\n      }),\n      onKeyDown: this.onEnter.bind(this),\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      value: this.state.password,\n      onChange: x => this.setState({\n        password: x.target.value\n      }),\n      onKeyDown: this.onEnter.bind(this) // autoComplete='current-password'\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Button, {\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.verifyAuth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), this.state.failed ? React.createElement(Typography, {\n      color: \"error\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Incorrect username or password, please try again\") : React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Icons made by Freepik from https://www.flaticon.com\"));\n  }\n\n}\nSignIn.propTypes = {\n  authTrue: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["D:/podoscope/src/signIn/SignIn.js"],"names":["React","Component","Button","CssBaseline","TextField","Typography","Container","CryptoJS","PropTypes","baseUrl","genericGet","logo","SignIn","constructor","props","state","username","password","failed","verifyAuth","bind","storedSID","localStorage","getItem","authTrue","serializeObject","obj","str","Object","entries","forEach","e","prototype","hasOwnProperty","call","push","JSON","stringify","join","host","queries","method","input_type","response_type","rest_data","user_auth","user_name","MD5","toString","application_name","name_value_list","name","value","endpoint","data","id","setItem","setState","onEnter","key","render","x","target","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,0BAApC;AAEA,OAAOC,IAAP,MAAiB,6BAAjB;AAEA,eAAe,MAAMC,MAAN,SAAqBX,SAArB,CAA+B;AAC5CY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,QAAQ,EAAE,EAA1B;AAA8BC,MAAAA,MAAM,EAAE;AAAtC,KAAb;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AAEA,UAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAlB;;AACA,QAAIF,SAAS,IAAIA,SAAS,KAAK,WAA/B,EAA4C;AAC1C,WAAKP,KAAL,CAAWU,QAAX,CAAoB,IAApB;AACD;AACF;;AAEDC,EAAAA,eAAe,CAACC,GAAD,EAAM;AACnB,UAAMC,GAAG,GAAG,EAAZ;AACAC,IAAAA,MAAM,CAACC,OAAP,CAAeH,GAAf,EAAoBI,OAApB,CAA4BC,CAAC,IAAI;AAC/B,UAAIH,MAAM,CAACI,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,GAArC,EAA0CK,CAAC,CAAC,CAAD,CAA3C,CAAJ,EAAqD;AACnD,YAAI,OAAOA,CAAC,CAAC,CAAD,CAAR,KAAgB,QAApB,EAA8B;AAC5BJ,UAAAA,GAAG,CAACQ,IAAJ,CAAUJ,CAAC,CAAC,CAAD,CAAF,GAAS,GAAT,GAAeK,IAAI,CAACC,SAAL,CAAeN,CAAC,CAAC,CAAD,CAAhB,CAAxB;AACD,SAFD,MAEO;AACLJ,UAAAA,GAAG,CAACQ,IAAJ,CAAUJ,CAAC,CAAC,CAAD,CAAF,GAAS,GAAT,GAAgBA,CAAC,CAAC,CAAD,CAA1B;AACD;AACF;AACF,KARD;AAUA,WAAOJ,GAAG,CAACW,IAAJ,CAAS,GAAT,CAAP;AACD;;AAEDnB,EAAAA,UAAU,GAAG;AACX,UAAMoB,IAAI,GAAG9B,OAAO,GAAG,sBAAvB;AACA,UAAM+B,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,OADM;AAEdC,MAAAA,UAAU,EAAE,MAFE;AAGdC,MAAAA,aAAa,EAAE,MAHD;AAIdC,MAAAA,SAAS,EAAE;AACTC,QAAAA,SAAS,EAAE;AACTC,UAAAA,SAAS,EAAE,KAAK/B,KAAL,CAAWC,QADb;AAETC,UAAAA,QAAQ,EAAEV,QAAQ,CAACwC,GAAT,CAAa,KAAKhC,KAAL,CAAWE,QAAxB,EAAkC+B,QAAlC;AAFD,SADF;AAKTC,QAAAA,gBAAgB,EAAE,EALT;AAMTC,QAAAA,eAAe,EAAE,CAAC;AAChBC,UAAAA,IAAI,EAAE,cADU;AAEhBC,UAAAA,KAAK,EAAE;AAFS,SAAD;AANR;AAJG,KAAhB;AAiBA,UAAMC,QAAQ,GAAI,GAAEd,IAAK,IAAG,KAAKd,eAAL,CAAqBe,OAArB,CAA8B,EAA1D;AACA9B,IAAAA,UAAU,CAAC2C,QAAD,EAAYC,IAAD,IAAU;AAC7B,UAAIA,IAAI,CAACC,EAAT,EAAa;AACXjC,QAAAA,YAAY,CAACkC,OAAb,CAAqB,KAArB,EAA4BF,IAAI,CAACC,EAAjC;AACA,aAAKzC,KAAL,CAAWU,QAAX,CAAoB,IAApB;AACD,OAHD,MAGO;AACL,aAAKiC,QAAL,CAAc;AAAEvC,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD;AACF,KAPS,EAOP,MAAM;AACP,WAAKuC,QAAL,CAAc;AAAEzC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,QAAQ,EAAE,EAA1B;AAA8BC,QAAAA,MAAM,EAAE;AAAtC,OAAd;AACD,KATS,EASP,KATO,CAAV;AAUD;;AAEDwC,EAAAA,OAAO,CAAC3B,CAAD,EAAI;AACT,QAAIA,CAAC,CAAC4B,GAAF,KAAU,OAAd,EAAuB;AACrB,WAAKxC,UAAL;AACD;AACF;;AAEDyC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,GAAG,EAAEjD,IAAV;AAAgB,MAAA,GAAG,EAAC,eAApB;AAAoC,MAAA,MAAM,EAAE,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAIE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAwC,MAAA,KAAK,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,EAOE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,QAAQ,MAHV;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,EAAE,EAAC,UALL;AAME,MAAA,KAAK,EAAC,WANR;AAOE,MAAA,IAAI,EAAC,UAPP,CAQE;AARF;AASE,MAAA,KAAK,EAAE,KAAKI,KAAL,CAAWC,QATpB;AAUE,MAAA,QAAQ,EAAG6C,CAAD,IAAO,KAAKJ,QAAL,CAAc;AAAEzC,QAAAA,QAAQ,EAAE6C,CAAC,CAACC,MAAF,CAASV;AAArB,OAAd,CAVnB;AAWE,MAAA,SAAS,EAAE,KAAKM,OAAL,CAAatC,IAAb,CAAkB,IAAlB,CAXb;AAYE,MAAA,SAAS,MAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAqBE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,QAAQ,MAHV;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,IAAI,EAAC,UALP;AAME,MAAA,KAAK,EAAC,UANR;AAOE,MAAA,IAAI,EAAC,UAPP;AAQE,MAAA,EAAE,EAAC,UARL;AASE,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,QATpB;AAUE,MAAA,QAAQ,EAAG4C,CAAD,IAAO,KAAKJ,QAAL,CAAc;AAAExC,QAAAA,QAAQ,EAAE4C,CAAC,CAACC,MAAF,CAASV;AAArB,OAAd,CAVnB;AAWE,MAAA,SAAS,EAAE,KAAKM,OAAL,CAAatC,IAAb,CAAkB,IAAlB,CAXb,CAYA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,EAmCE,oBAAC,MAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,OAAO,EAAE,KAAKD,UAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAnCF,EA0CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1CF,EA2CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CF,EA4CG,KAAKJ,KAAL,CAAWG,MAAX,GACC,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,OAAlB;AAA0B,MAAA,KAAK,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DADD,GAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhDJ,CAFF,EAqDE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,KAAK,EAAC,eAAlC;AAAkD,MAAA,KAAK,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DArDF,CADF;AA0DD;;AA5H2C;AA+H9CN,MAAM,CAACmD,SAAP,GAAmB;AACjBvC,EAAAA,QAAQ,EAAEhB,SAAS,CAACwD,IAAV,CAAeC;AADR,CAAnB","sourcesContent":["import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { baseUrl, genericGet } from '../utils/requestsManager';\r\n\r\nimport logo from '../assets/logo_piesalud.png';\r\n\r\nexport default class SignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { username: '', password: '', failed: false };\r\n    this.verifyAuth = this.verifyAuth.bind(this);\r\n\r\n    const storedSID = localStorage.getItem('sid');\r\n    if (storedSID && storedSID !== 'undefined') {\r\n      this.props.authTrue(true);\r\n    }\r\n  }\r\n\r\n  serializeObject(obj) {\r\n    const str = [];\r\n    Object.entries(obj).forEach(e => {\r\n      if (Object.prototype.hasOwnProperty.call(obj, e[0])) {\r\n        if (typeof e[1] === 'object') {\r\n          str.push((e[0]) + '=' + JSON.stringify(e[1]));\r\n        } else {\r\n          str.push((e[0]) + '=' + (e[1]));\r\n        }\r\n      }\r\n    });\r\n\r\n    return str.join('&');\r\n  }\r\n\r\n  verifyAuth() {\r\n    const host = baseUrl + '/service/v2/rest.php';\r\n    const queries = {\r\n      method: 'login',\r\n      input_type: 'JSON',\r\n      response_type: 'JSON',\r\n      rest_data: {\r\n        user_auth: {\r\n          user_name: this.state.username,\r\n          password: CryptoJS.MD5(this.state.password).toString()\r\n        },\r\n        application_name: '',\r\n        name_value_list: [{\r\n          name: 'notifyonsave',\r\n          value: 'true'\r\n        }]\r\n      }\r\n    };\r\n\r\n    const endpoint = `${host}?${this.serializeObject(queries)}`;\r\n    genericGet(endpoint, (data) => {\r\n      if (data.id) {\r\n        localStorage.setItem('sid', data.id);\r\n        this.props.authTrue(true);\r\n      } else {\r\n        this.setState({ failed: true });\r\n      }\r\n    }, () => {\r\n      this.setState({ username: '', password: '', failed: true });\r\n    }, false);\r\n  }\r\n\r\n  onEnter(e) {\r\n    if (e.key === 'Enter') {\r\n      this.verifyAuth();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container component='main' maxWidth='xs'>\r\n        <CssBaseline />\r\n        <div>\r\n          \r\n          <img src={logo} alt=\"logo piesalud\" height={'150px'} />\r\n\r\n          <Typography component='h1' variant='h5' align='center'>\r\n            Sign in\r\n          </Typography>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='username'\r\n            label='User name'\r\n            name='username'\r\n            // autoComplete='email'\r\n            value={this.state.username}\r\n            onChange={(x) => this.setState({ username: x.target.value })}\r\n            onKeyDown={this.onEnter.bind(this)}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            name='password'\r\n            label='Password'\r\n            type='password'\r\n            id='password'\r\n            value={this.state.password}\r\n            onChange={(x) => this.setState({ password: x.target.value })}\r\n            onKeyDown={this.onEnter.bind(this)}\r\n          // autoComplete='current-password'\r\n          />\r\n          <Button\r\n            fullWidth\r\n            variant='contained'\r\n            color='primary'\r\n            onClick={this.verifyAuth}>\r\n            Sign In\r\n          </Button>\r\n          <br />\r\n          <br />\r\n          {this.state.failed ?\r\n            <Typography color='error' align='center'>\r\n              Incorrect username or password, please try again\r\n            </Typography> :\r\n            <br />\r\n          }\r\n        </div>\r\n        <Typography variant='body2' color='textSecondary' align='center'>\r\n          Icons made by Freepik from https://www.flaticon.com\r\n        </Typography>\r\n      </Container>);\r\n  }\r\n}\r\n\r\nSignIn.propTypes = {\r\n  authTrue: PropTypes.func.isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}