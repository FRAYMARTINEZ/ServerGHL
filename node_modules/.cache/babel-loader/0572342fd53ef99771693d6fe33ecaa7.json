{"ast":null,"code":"import _slicedToArray from \"D:\\\\podoscope\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\podoscope\\\\src\\\\mainView\\\\SearchUser.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { baseUrl, genericGet, genericPostUrlParams } from '../utils/requestsManager';\nexport default class SearchUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userCedula: '',\n      loading: false,\n      sessionExpired: false,\n      cedulaFound: true\n    }; // this.cedulaFound = true;\n\n    this.searchUser = this.searchUser.bind(this);\n    this.onEnter = this.onEnter.bind(this);\n  }\n\n  setMainViewState(newPatient, patientExam) {\n    const examID = patientExam.eid;\n    newPatient.eid = examID;\n    this.props.setUser(newPatient); // set feet state in main view\n\n    this.props.setFeetInfo(patientExam.feet); // set shoe size state in main view\n\n    this.props.obsRefReal.setObservation(patientExam.observations); // set obs state in main view\n\n    this.props.setShoeSize(parseInt(patientExam.shoeSize));\n    this.searchUserImages(examID); // this.props.toggleModal();\n  }\n\n  searchUserExam(pid, sid, newPatient) {\n    genericGet(baseUrl + '/index.php?sid=' + sid + '&entryPoint=list_efp&pid=' + pid, data => {\n      console.log('Obtained patient exams:', data);\n      let patientExam;\n\n      if (data.rta.length > 0) {\n        // user has exams\n        //get first and only exam\n        const exam = data.rta[0];\n        console.log('Using exam:', exam);\n        patientExam = {\n          eid: exam.id,\n          feet: {\n            left: {\n              footprintType: exam.tipo_huella_i,\n              heelType: exam.tipo_talon_i,\n              footType: exam.tipo_pie_i\n            },\n            right: {\n              footprintType: exam.tipo_huella_d,\n              heelType: exam.tipo_talon_d,\n              footType: exam.tipo_pie_d\n            }\n          },\n          observations: exam.observaciones,\n          shoeSize: exam.talla_plantillas\n        };\n        this.setMainViewState(newPatient, patientExam);\n      } else {\n        // user does not have an exam.\n        const defaultType = 'NEUTRO';\n        const defaultObs = '';\n        const defaultShoesize = 0; //create exam\n\n        genericPostUrlParams(baseUrl + '/index.php', {\n          entryPoint: 'save_efp',\n          sid: sid,\n          thi: defaultType,\n          thd: defaultType,\n          tpi: defaultType,\n          tpd: defaultType,\n          tti: defaultType,\n          ttd: defaultType,\n          obs: defaultObs,\n          tp: defaultShoesize,\n          pid: pid\n        }, data => {\n          console.log('Sucessfully created exam for patient ', newPatient.cedula);\n          console.log(data); //success, eid in data.rta\n\n          patientExam = {\n            eid: data.rta,\n            feet: {\n              left: {\n                footprintType: defaultType,\n                heelType: defaultType,\n                footType: defaultType\n              },\n              right: {\n                footprintType: defaultType,\n                heelType: defaultType,\n                footType: defaultType\n              }\n            },\n            observations: defaultObs,\n            shoeSize: defaultShoesize\n          };\n          this.setMainViewState(newPatient, patientExam);\n        }, e => {\n          if (e.type === 'fetch') {\n            console.log('Failed to fetch'); // TODO snackbar try again later\n          } else if (e.type === 'session_expired') {\n            console.log('Session Expired'); // TODO modal for relogin\n\n            this.setState({\n              sessionExpired: true\n            });\n          }\n        });\n      }\n    }, e => {\n      if (e.type === 'fetch') {\n        console.log('Failed to fetch');\n      } else if (e.type === 'session_expired') {\n        console.log('Session Expired');\n        this.setState({\n          sessionExpired: true\n        });\n      }\n    });\n  }\n\n  getImageAndID(rawImageString) {\n    console.log('Splitting string:');\n    const strLength = rawImageString.length;\n    console.log(`Raw string length: ${strLength}`);\n    const index = rawImageString.indexOf(\"@\");\n    console.log(`Found @ char in ${index}`);\n    const imID = rawImageString.substring(index + 1, strLength);\n    const im = rawImageString.substring(0, index);\n    console.log('Split string.');\n    return [imID, im];\n  }\n\n  searchUserImages(examID) {\n    console.log('In search user images');\n    let currentSessionID = localStorage.getItem('sid');\n    console.log(`Searching for exams with examid: ${examID}`);\n    const endpointURL = baseUrl + '/index.php?sid=' + currentSessionID + '&entryPoint=list_img&efp_id=' + examID;\n    genericGet(endpointURL, data => {\n      console.log(`Obtained images with examid ${examID}:`);\n      console.log(`Recieved ${data.rta.length} images.`); //clear previous image data\n\n      console.log('Clearing image data');\n\n      for (let i = 0; i < 6; i++) {\n        console.log(`Clearing image ${i}`);\n        this.props.setImageInMainView(i, {});\n        console.log('Main view cleared');\n        this.props.selectImageRef.setImageToDefault(i);\n        console.log('Image ref cleared');\n      }\n\n      console.log('Iterating over data:');\n\n      for (let i = 0; i < data.rta.length; i++) {\n        const imObject = data.rta[i];\n        console.log(imObject);\n\n        const _this$getImageAndID = this.getImageAndID(imObject.imagen),\n              _this$getImageAndID2 = _slicedToArray(_this$getImageAndID, 2),\n              imID = _this$getImageAndID2[0],\n              image = _this$getImageAndID2[1];\n\n        console.log(`Image # ${i} Image ID: ${imID} End of string ${image.substring(image.length - 20, image.length)}`);\n        console.log('Setting image...');\n        const imageData = {\n          data: {\n            free: {\n              path: JSON.parse(imObject.traza.replace(/&quot;/g, `\"`)),\n              down: false\n            },\n            left: {\n              lineX: imObject.u_x_i || undefined,\n              point: {\n                x: imObject.x_i || undefined,\n                y: imObject.y_i || undefined\n              }\n            },\n            right: {\n              lineX: imObject.u_x_d || undefined,\n              point: {\n                x: imObject.x_d || undefined,\n                y: imObject.y_d || undefined\n              }\n            }\n          },\n          extra: {\n            leftAngle: imObject.angulo_i || undefined,\n            rightAngle: imObject.angulo_d || undefined\n          },\n          image: image\n        };\n        this.props.setImageInMainView(imID, imageData);\n        this.props.selectImageRef.updateImage(imID, image);\n        console.log('Image set succesfully');\n      }\n\n      this.setState({\n        loading: false\n      });\n      this.props.toggleModal();\n    }, () => {});\n  }\n\n  searchUser() {\n    this.setState({\n      loading: true\n    }); // session id\n\n    let currentSessionID = localStorage.getItem('sid'); // get patient info\n\n    genericGet(baseUrl + '/index.php?sid=' + currentSessionID + '&entryPoint=obtener_paciente&cedula=' + this.state.userCedula, data => {\n      if (data.rta.id == null) {\n        // this.cedulaFound = false;\n        this.setState({\n          cedulaFound: false,\n          loading: false\n        });\n        console.log('Cedula not found');\n      } else {\n        // patient exists\n        console.log('Patient found: ', data);\n        let newPatient = {\n          name: data.rta.nombre + ' ' + data.rta.apellidos,\n          cedula: this.state.userCedula,\n          cellphone: data.rta.celular,\n          email: data.rta.email,\n          dob: data.rta.nacimiento,\n          sex: data.rta.genero,\n          //patient id in the db\n          pid: data.rta.id,\n          left: {},\n          right: {}\n        };\n        console.log('Getting exam id'); // get exam with shoe size, type of foot, etc. \n\n        this.searchUserExam(newPatient.pid, currentSessionID, newPatient); // get exam images\n      }\n    }, //TODO make snackbar\n    e => {\n      if (e.type === 'fetch') {\n        console.log('Failed to fetch');\n      } else if (e.type === 'session_expired') {\n        console.log('Session Expired');\n        this.setState({\n          sessionExpired: true\n        });\n      }\n    });\n  }\n\n  logOut() {\n    localStorage.setItem('sid', undefined);\n    this.props.logout();\n  }\n\n  onEnter(e) {\n    if (e.key === 'Enter') {\n      this.searchUser();\n    }\n  }\n\n  renderSearchCard() {\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Search user\"), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"username\",\n      label: \"C\\xE9dula\" // className={classes.textField}\n      ,\n      value: this.state.userCedula,\n      onChange: x => this.setState({\n        userCedula: x.target.value\n      }),\n      autoFocus: true,\n      onKeyDown: this.onEnter.bind(this),\n      type: \"number\" // margin=\"auto\"\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.searchUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(SearchIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }))), !this.state.cedulaFound ? React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      component: \"h2\",\n      color: \"error\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, \"Cedula not found\")) : React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }))), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      color: \"secondary\",\n      onClick: this.props.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n  renderLoading() {\n    return React.createElement(Card, {\n      className: \"waitingCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      className: \"gridWaiting\",\n      container: true,\n      spacing: 4,\n      direction: \"column\",\n      alignItems: \"center\",\n      justify: \"space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, \"Searching user...\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }));\n  }\n\n  renderLogout() {\n    return React.createElement(Card, {\n      className: \"waitingCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      className: \"gridWaiting\",\n      container: true,\n      spacing: 4,\n      direction: \"column\",\n      alignItems: \"center\",\n      justify: \"space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, \"Your session has expired.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }), \"Please login again.\")), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.logOut(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, \"Log out\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    let renderedComponent;\n\n    if (this.state.sessionExpired) {\n      renderedComponent = this.renderLogout();\n    } else {\n      if (!this.state.loading) {\n        renderedComponent = this.renderSearchCard();\n      } else {\n        renderedComponent = this.renderLoading();\n      }\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, renderedComponent);\n  }\n\n}\nSearchUser.propTypes = {\n  toggleModal: PropTypes.func,\n  setUser: PropTypes.func,\n  setFeetInfo: PropTypes.func,\n  // shoeRef: PropTypes.any,\n  obsRefReal: PropTypes.any,\n  setShoeSize: PropTypes.func\n};","map":{"version":3,"sources":["D:/podoscope/src/mainView/SearchUser.jsx"],"names":["React","Component","PropTypes","Card","CardContent","CardActions","Button","Typography","TextField","Grid","SearchIcon","CircularProgress","baseUrl","genericGet","genericPostUrlParams","SearchUser","constructor","props","state","userCedula","loading","sessionExpired","cedulaFound","searchUser","bind","onEnter","setMainViewState","newPatient","patientExam","examID","eid","setUser","setFeetInfo","feet","obsRefReal","setObservation","observations","setShoeSize","parseInt","shoeSize","searchUserImages","searchUserExam","pid","sid","data","console","log","rta","length","exam","id","left","footprintType","tipo_huella_i","heelType","tipo_talon_i","footType","tipo_pie_i","right","tipo_huella_d","tipo_talon_d","tipo_pie_d","observaciones","talla_plantillas","defaultType","defaultObs","defaultShoesize","entryPoint","thi","thd","tpi","tpd","tti","ttd","obs","tp","cedula","e","type","setState","getImageAndID","rawImageString","strLength","index","indexOf","imID","substring","im","currentSessionID","localStorage","getItem","endpointURL","i","setImageInMainView","selectImageRef","setImageToDefault","imObject","imagen","image","imageData","free","path","JSON","parse","traza","replace","down","lineX","u_x_i","undefined","point","x","x_i","y","y_i","u_x_d","x_d","y_d","extra","leftAngle","angulo_i","rightAngle","angulo_d","updateImage","toggleModal","name","nombre","apellidos","cellphone","celular","email","dob","nacimiento","sex","genero","logOut","setItem","logout","key","renderSearchCard","target","value","renderLoading","renderLogout","render","renderedComponent","propTypes","func","any"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { baseUrl, genericGet, genericPostUrlParams } from '../utils/requestsManager';\r\n\r\nexport default class SearchUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userCedula: '',\r\n      loading: false,\r\n      sessionExpired: false,\r\n      cedulaFound: true,\r\n    };\r\n    // this.cedulaFound = true;\r\n    this.searchUser = this.searchUser.bind(this);\r\n    this.onEnter = this.onEnter.bind(this);\r\n  }\r\n\r\n  setMainViewState(newPatient,patientExam){\r\n    const examID = patientExam.eid;\r\n    newPatient.eid = examID;\r\n\r\n    this.props.setUser(newPatient);\r\n\r\n    // set feet state in main view\r\n    this.props.setFeetInfo(patientExam.feet);\r\n    \r\n    // set shoe size state in main view\r\n    this.props.obsRefReal.setObservation(patientExam.observations);\r\n\r\n    // set obs state in main view\r\n    this.props.setShoeSize(parseInt(patientExam.shoeSize));\r\n    \r\n    this.searchUserImages(examID);\r\n    \r\n    // this.props.toggleModal();\r\n    \r\n\r\n  }\r\n\r\n  searchUserExam(pid, sid, newPatient) {\r\n\r\n\r\n\r\n    genericGet(\r\n      baseUrl + '/index.php?sid=' + sid + '&entryPoint=list_efp&pid=' + pid,\r\n      (data) => {\r\n        console.log('Obtained patient exams:', data);\r\n        let patientExam;\r\n        if (data.rta.length > 0) {\r\n          // user has exams\r\n\r\n          //get first and only exam\r\n          const exam = data.rta[0];\r\n          console.log('Using exam:', exam);\r\n          patientExam = {\r\n            eid: exam.id,\r\n            feet: {\r\n              left: {\r\n                footprintType: exam.tipo_huella_i,\r\n                heelType: exam.tipo_talon_i,\r\n                footType: exam.tipo_pie_i\r\n              },\r\n              right: {\r\n                footprintType: exam.tipo_huella_d,\r\n                heelType: exam.tipo_talon_d,\r\n                footType: exam.tipo_pie_d\r\n              }\r\n            },\r\n            observations: exam.observaciones,\r\n            shoeSize: exam.talla_plantillas\r\n\r\n          };\r\n\r\n\r\n          this.setMainViewState(newPatient,patientExam);\r\n        }\r\n        else {\r\n          // user does not have an exam.\r\n          const defaultType = 'NEUTRO';\r\n          const defaultObs = '';\r\n          const defaultShoesize = 0;\r\n          //create exam\r\n          genericPostUrlParams(baseUrl + '/index.php',\r\n            {\r\n              entryPoint: 'save_efp',\r\n              sid: sid,\r\n              thi: defaultType,\r\n              thd: defaultType,\r\n              tpi: defaultType,\r\n              tpd: defaultType,\r\n              tti: defaultType,\r\n              ttd: defaultType,\r\n              obs: defaultObs,\r\n              tp: defaultShoesize,\r\n              pid: pid\r\n            },\r\n            (data) => {\r\n              console.log('Sucessfully created exam for patient ', newPatient.cedula);\r\n              console.log(data);\r\n\r\n              //success, eid in data.rta\r\n              patientExam = {\r\n                eid: data.rta,\r\n                feet: {\r\n                  left: {\r\n                    footprintType: defaultType,\r\n                    heelType: defaultType,\r\n                    footType: defaultType\r\n                  },\r\n                  right: {\r\n                    footprintType: defaultType,\r\n                    heelType: defaultType,\r\n                    footType: defaultType\r\n                  }\r\n                },\r\n                observations: defaultObs,\r\n                shoeSize: defaultShoesize\r\n\r\n              };\r\n\r\n              this.setMainViewState(newPatient,patientExam);\r\n\r\n            },\r\n            (e) => {\r\n              if (e.type === 'fetch') {\r\n                console.log('Failed to fetch');\r\n                // TODO snackbar try again later\r\n              } else if (e.type === 'session_expired') {\r\n                console.log('Session Expired');\r\n                // TODO modal for relogin\r\n                this.setState({sessionExpired: true});\r\n              }\r\n            });\r\n        }\r\n\r\n\r\n      },\r\n      (e) => {\r\n        if (e.type === 'fetch') {\r\n          console.log('Failed to fetch');\r\n        } else if (e.type === 'session_expired') {\r\n          console.log('Session Expired');\r\n          this.setState({sessionExpired: true});\r\n        }\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n  getImageAndID(rawImageString){\r\n    console.log('Splitting string:')\r\n    const strLength = rawImageString.length;\r\n    console.log(`Raw string length: ${strLength}`)\r\n    const index = rawImageString.indexOf(\"@\");\r\n    console.log(`Found @ char in ${index}`);\r\n    const imID = rawImageString.substring(index+1,strLength);\r\n    const im = rawImageString.substring(0,index);\r\n    console.log('Split string.')\r\n    return [imID,im]\r\n  }\r\n\r\n  searchUserImages(examID){\r\n    console.log('In search user images');\r\n    let currentSessionID = localStorage.getItem('sid');\r\n    console.log(`Searching for exams with examid: ${examID}`)\r\n    const endpointURL = baseUrl + '/index.php?sid=' + currentSessionID + '&entryPoint=list_img&efp_id=' + examID;\r\n    genericGet(endpointURL, \r\n      (data)=> {\r\n        console.log(`Obtained images with examid ${examID}:`);\r\n        console.log(`Recieved ${data.rta.length} images.`);\r\n\r\n        //clear previous image data\r\n        console.log('Clearing image data');\r\n        for(let i = 0; i<6 ; i++){\r\n          console.log(`Clearing image ${i}`);\r\n          this.props.setImageInMainView(i,{});\r\n          console.log('Main view cleared');\r\n          this.props.selectImageRef.setImageToDefault(i);\r\n          console.log('Image ref cleared');\r\n        }\r\n\r\n        console.log('Iterating over data:')\r\n        for(let i = 0; i<data.rta.length; i++){\r\n          const imObject = data.rta[i];\r\n          console.log(imObject);\r\n          const [imID, image] = this.getImageAndID(imObject.imagen); \r\n          console.log(`Image # ${i} Image ID: ${imID} End of string ${image.substring(image.length-20, image.length)}`)\r\n          console.log('Setting image...')\r\n          const imageData = {\r\n            data: {\r\n              free: {\r\n                path: JSON.parse(imObject.traza.replace(/&quot;/g,`\"`)),\r\n                down: false\r\n              },\r\n              left: {\r\n                lineX: imObject.u_x_i || undefined,\r\n                point: {\r\n                  x: imObject.x_i || undefined,\r\n                  y: imObject.y_i || undefined\r\n                }\r\n              },\r\n              right: {\r\n                lineX: imObject.u_x_d || undefined,\r\n                point: {\r\n                  x: imObject.x_d || undefined,\r\n                  y: imObject.y_d || undefined\r\n                }\r\n              }\r\n            },\r\n            extra: {\r\n              leftAngle: imObject.angulo_i || undefined,\r\n              rightAngle: imObject.angulo_d || undefined\r\n            },\r\n            image:image\r\n          };\r\n\r\n          this.props.setImageInMainView(imID,imageData);\r\n          this.props.selectImageRef.updateImage(imID,image);\r\n          console.log('Image set succesfully');\r\n          \r\n        }\r\n        this.setState({ loading: false });\r\n        this.props.toggleModal();\r\n      }, \r\n      () => {}\r\n    )\r\n  }\r\n\r\n  searchUser() {\r\n    this.setState({ loading: true });\r\n    // session id\r\n    let currentSessionID = localStorage.getItem('sid');\r\n\r\n    // get patient info\r\n    genericGet(\r\n      baseUrl + '/index.php?sid=' + currentSessionID + '&entryPoint=obtener_paciente&cedula=' + this.state.userCedula,\r\n      (data) => {\r\n\r\n        if (data.rta.id == null) {\r\n          // this.cedulaFound = false;\r\n          this.setState({cedulaFound: false, loading: false});\r\n          console.log('Cedula not found')\r\n        }\r\n        else {\r\n          // patient exists\r\n          console.log('Patient found: ', data)\r\n          let newPatient = {\r\n            name: data.rta.nombre + ' ' + data.rta.apellidos,\r\n            cedula: this.state.userCedula,\r\n            cellphone: data.rta.celular,\r\n            email: data.rta.email,\r\n            dob: data.rta.nacimiento,\r\n            sex: data.rta.genero,\r\n            //patient id in the db\r\n            pid: data.rta.id,\r\n            left: {},\r\n            right: {}\r\n          };\r\n\r\n          console.log('Getting exam id')\r\n          // get exam with shoe size, type of foot, etc. \r\n          this.searchUserExam(newPatient.pid, currentSessionID, newPatient);\r\n          // get exam images\r\n        }\r\n\r\n      },\r\n      //TODO make snackbar\r\n      (e) => {\r\n        if (e.type === 'fetch') {\r\n          console.log('Failed to fetch');\r\n        } else if (e.type === 'session_expired') {\r\n          console.log('Session Expired');\r\n          this.setState({sessionExpired: true});\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  logOut() {\r\n    localStorage.setItem('sid', undefined);\r\n    this.props.logout();\r\n  }\r\n\r\n  onEnter(e) {\r\n    if (e.key === 'Enter') {\r\n      this.searchUser();\r\n    }\r\n  }\r\n\r\n  renderSearchCard() {\r\n    return (\r\n      <Card>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Search user\r\n          </Typography>\r\n          <Grid container justify='center' alignItems='flex-end'>\r\n            <Grid item>\r\n              <TextField\r\n                id=\"username\"\r\n                label=\"Cédula\"\r\n                // className={classes.textField}\r\n                value={this.state.userCedula}\r\n                onChange={(x) => this.setState({ userCedula: x.target.value })}\r\n                autoFocus={true}\r\n                onKeyDown={this.onEnter.bind(this)}\r\n                type=\"number\"\r\n              // margin=\"auto\"\r\n              />\r\n\r\n            </Grid>\r\n            <Grid item>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={this.searchUser}>\r\n                <SearchIcon />\r\n              </Button>\r\n            </Grid>\r\n            {!this.state.cedulaFound ?\r\n\r\n              <Grid item xs={12}>\r\n                <br />\r\n                <Typography component=\"h2\" color='error' align='center'>\r\n                  Cedula not found\r\n                </Typography>\r\n              </Grid>\r\n              :\r\n              <br />\r\n            }\r\n\r\n          </Grid>\r\n        </CardContent>\r\n\r\n        <CardActions >\r\n          <Button size=\"small\" color=\"secondary\" onClick={this.props.toggleModal}>\r\n            Cancel\r\n          </Button>\r\n        </CardActions>\r\n      </Card>);\r\n  }\r\n\r\n  renderLoading() {\r\n    return (\r\n      <Card className='waitingCard'>\r\n        <Grid className='gridWaiting'\r\n          container\r\n          spacing={4}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"space-around\" >\r\n          <Grid item xs={12}>\r\n            <br />\r\n            <Typography variant=\"h5\" component=\"h2\" align='center'>\r\n              Searching user...\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <CircularProgress />\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n      </Card >\r\n    );\r\n  }\r\n\r\n  renderLogout(){\r\n    return (\r\n      <Card className='waitingCard'>\r\n        <Grid className='gridWaiting'\r\n          container\r\n          spacing={4}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"space-around\" >\r\n          <Grid item xs={12}>\r\n            <br />\r\n            <Typography variant=\"h5\" component=\"h2\" align='center'>\r\n              Your session has expired.\r\n              <br/> \r\n              Please login again.\r\n            </Typography>\r\n          </Grid>\r\n        <CardActions >\r\n          <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={()=>this.logOut()}>\r\n            Log out\r\n          </Button>\r\n        </CardActions>\r\n        </Grid>\r\n        <br />\r\n      </Card > \r\n    )\r\n  }\r\n\r\n  render() {\r\n    let renderedComponent;\r\n    if(this.state.sessionExpired){\r\n      renderedComponent = this.renderLogout();\r\n    }\r\n    else{\r\n      if(!this.state.loading){\r\n        renderedComponent = this.renderSearchCard();\r\n      }\r\n      else{\r\n        renderedComponent = this.renderLoading();\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {renderedComponent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchUser.propTypes = {\r\n  toggleModal: PropTypes.func,\r\n  setUser: PropTypes.func,\r\n  setFeetInfo: PropTypes.func,\r\n  // shoeRef: PropTypes.any,\r\n  obsRefReal: PropTypes.any,\r\n  setShoeSize: PropTypes.func\r\n};"]},"metadata":{},"sourceType":"module"}