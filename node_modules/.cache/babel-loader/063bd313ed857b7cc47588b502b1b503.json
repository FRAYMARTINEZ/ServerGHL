{"ast":null,"code":"var _jsxFileName = \"D:\\\\podoscope\\\\src\\\\mainView\\\\Menu\\\\Menu.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Drawer, ListItem, ListItemText, ListItemIcon, Typography, TextField, Fab } from '@material-ui/core';\nimport { Settings as SettingIcon, ExitToApp as ExitToAppIcon, ArrowBack } from '@material-ui/icons';\nimport './Menu.css';\nexport default class Menu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggleDrawer = this.toggleDrawer.bind(this);\n    this.state = {\n      open: false\n    };\n  }\n\n  toggleDrawer(open) {\n    return event => {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n      }\n\n      this.setState({\n        open\n      });\n    };\n  }\n\n  logOut() {\n    localStorage.setItem('sid', undefined);\n    this.toggleDrawer(false);\n    this.props.logout();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Fab, {\n      id: \"open-draw\",\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      className: \"fab\",\n      onClick: this.toggleDrawer(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(SettingIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(Drawer, {\n      open: this.state.open,\n      onClose: this.toggleDrawer(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.toggleDrawer(false),\n      color: \"secondary\",\n      id: \"draw-back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(ArrowBack, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      role: \"presentation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: \"center\",\n      gutterBottom: true,\n      id: \"threshold-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Threshold\"), React.createElement(\"div\", {\n      id: \"menu-threshold-sett\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"outlined-required\",\n      label: \"Both sides\",\n      value: this.props.threshold.value,\n      variant: \"outlined\",\n      type: \"number\",\n      onChange: e => {\n        this.props.setThreshold(e.target.value);\n        +e.target.value === 0 && e.target.select();\n      },\n      onFocus: e => e.target.select(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), React.createElement(ListItem, {\n      button: true,\n      id: \"logout-btn\",\n      onClick: () => this.logOut(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(ExitToAppIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: 'Log out',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })))));\n  }\n\n}\nMenu.propTypes = {\n  logout: PropTypes.func.isRequired,\n  threshold: PropTypes.object.isRequired,\n  setThreshold: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["D:/podoscope/src/mainView/Menu/Menu.jsx"],"names":["React","PropTypes","Button","Drawer","ListItem","ListItemText","ListItemIcon","Typography","TextField","Fab","Settings","SettingIcon","ExitToApp","ExitToAppIcon","ArrowBack","Menu","Component","constructor","props","toggleDrawer","bind","state","open","event","type","key","setState","logOut","localStorage","setItem","undefined","logout","render","threshold","value","e","setThreshold","target","select","propTypes","func","isRequired","object"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Drawer, ListItem, ListItemText, ListItemIcon, Typography, TextField, Fab } from '@material-ui/core';\r\nimport { Settings as SettingIcon, ExitToApp as ExitToAppIcon, ArrowBack } from '@material-ui/icons';\r\nimport './Menu.css';\r\n\r\nexport default class Menu extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleDrawer = this.toggleDrawer.bind(this);\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n\r\n  toggleDrawer(open) {\r\n    return event => {\r\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n        return;\r\n      }\r\n      this.setState({ open });\r\n    };\r\n  }\r\n\r\n  logOut() {\r\n    localStorage.setItem('sid', undefined);\r\n    this.toggleDrawer(false);\r\n    this.props.logout();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Fab\r\n          id=\"open-draw\"\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          className=\"fab\"\r\n          onClick={this.toggleDrawer(true)}>\r\n          <SettingIcon />\r\n        </Fab>\r\n        <Drawer open={this.state.open} onClose={this.toggleDrawer(false)}>\r\n          <Button onClick={this.toggleDrawer(false)} color=\"secondary\" id=\"draw-back\">\r\n            <ArrowBack />\r\n          </Button>\r\n          <div\r\n            role=\"presentation\">\r\n            <div>\r\n              <Typography align=\"center\" gutterBottom={true} id=\"threshold-title\">\r\n                Threshold\r\n              </Typography>\r\n              <div id=\"menu-threshold-sett\">\r\n                <TextField\r\n                  required\r\n                  id=\"outlined-required\"\r\n                  label=\"Both sides\"\r\n                  value={this.props.threshold.value}\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  onChange={e => {\r\n                    this.props.setThreshold(e.target.value);\r\n                    +e.target.value === 0 && e.target.select();\r\n                  }}\r\n                  onFocus={e => e.target.select()}\r\n                />\r\n              </div>\r\n            </div>\r\n            <ListItem\r\n              button\r\n              id=\"logout-btn\"\r\n              onClick={() => this.logOut()}>\r\n              <ListItemIcon>\r\n                <ExitToAppIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={'Log out'} />\r\n            </ListItem>\r\n          </div>\r\n        </Drawer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMenu.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  threshold: PropTypes.object.isRequired,\r\n  setThreshold: PropTypes.func.isRequired\r\n};\r\n"]},"metadata":{},"sourceType":"module"}