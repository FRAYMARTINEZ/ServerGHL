{"ast":null,"code":"var _jsxFileName = \"D:\\\\podoscope\\\\src\\\\mainView\\\\Cam\\\\CamCanvas.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Box } from '@material-ui/core';\nimport Info from './Info/Info';\nimport Side from './Side/Side';\nimport Down from './Down/Down';\nimport './CamCanvas.css';\nconst tempColor = 'red';\nconst tempPColor = 'yellow';\nconst defColor = 'cyan';\nconst freeColor = 'blue';\nexport default class CamCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.videoRef = React.createRef();\n    this.imgRef = React.createRef();\n    this.infoRef = React.createRef();\n    this.downRef = React.createRef();\n    this.setAction = this.setAction.bind(this);\n    this.mouseDownUpHandler = this.mouseDownUpHandler.bind(this);\n    this.takePicture = this.takePicture.bind(this);\n    this.cancelPicture = this.cancelPicture.bind(this);\n    this.savePicture = this.savePicture.bind(this);\n    this.updateDimension = this.updateDimension.bind(this);\n    this.action = 0;\n    this.rect = undefined;\n    this.data = this.getDefaultData();\n    this.side = this.data.left;\n  }\n\n  componentDidMount() {\n    this.rect = this.canvasRef.getBoundingClientRect();\n    this.videoRef.width = this.rect.width;\n    this.rect = this.videoRef.getBoundingClientRect();\n    this.ctx = this.canvasRef.getContext('2d');\n    let constraints = {\n      video: true,\n      audio: false\n    };\n    console.log(this);\n    navigator.mediaDevices.getUserMedia(constraints).then(mediaStream => this.setTheVideoStuff(mediaStream)).catch(function (err) {\n      console.log(\"An error ocurred: \" + err.name + \": \" + err.message);\n    });\n  }\n\n  setTheVideoStuff(mediaStream) {\n    this.videoRef.srcObject = mediaStream;\n    console.log('ref set.');\n    setTimeout(() => {\n      this.videoRef.play();\n      this.updateDimension();\n      window.addEventListener('resize', this.updateDimension);\n    }, 500);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateDimension);\n  }\n\n  getDefaultData() {\n    return {\n      left: {\n        lineX: undefined,\n        point: undefined\n      },\n      right: {\n        lineX: undefined,\n        point: undefined\n      },\n      free: {\n        down: false,\n        path: [[]]\n      },\n      extra: {\n        left: {\n          angle: undefined\n        },\n        right: {\n          angle: undefined\n        }\n      }\n    };\n  }\n\n  updateDimension() {\n    this.rect = this.videoRef.getBoundingClientRect();\n    this.canvasRef.height = this.rect.height;\n    this.canvasRef.width = this.rect.width;\n    this.imgRef.height = this.rect.height;\n    this.imgRef.width = this.rect.width;\n    this.drawState();\n  }\n\n  setImg(data) {\n    if (data.image) {\n      this.imgRef.classList.remove('hidden');\n      this.imgRef.src = data.image;\n    } else {\n      this.imgRef.removeAttribute('src');\n      this.imgRef.classList.add('hidden');\n    }\n\n    this.data = data.data || this.getDefaultData();\n    this.downRef.reset(!!data.image);\n    this.side = this.data.left;\n    this.infoRef.updateState(data.extra);\n    this.drawState();\n  } // draws lines and points of both feet and draws path\n\n\n  drawState() {\n    const drawSide = side => {\n      if (side.lineX) {\n        this.drawLine(side.lineX, false, side.point);\n      }\n\n      if (side.point) {\n        this.drawPoint(side.point.x, side.point.y, false, side.line);\n      }\n    };\n\n    this.ctx.clearRect(0, 0, this.rect.width + 20, this.rect.height + 20);\n    this.drawPath();\n    drawSide(this.data.left);\n    drawSide(this.data.right);\n  }\n\n  sketchLine(x1, y1, x2, y2) {\n    this.ctx.beginPath();\n    this.ctx.moveTo(x1, y1);\n    this.ctx.lineTo(x2, y2);\n    this.ctx.stroke();\n  }\n\n  drawLine(x, temp, point) {\n    this.ctx.strokeStyle = temp ? tempColor : defColor;\n\n    if (temp) {\n      this.ctx.setLineDash([5, 3]);\n    } else {\n      this.ctx.setLineDash([1, 0]);\n    } //+20 to avoid white space just before border of canvas\n\n\n    this.sketchLine(x, 0, x, this.rect.height + 20);\n\n    if (point) {\n      if (temp) {\n        this.ctx.setLineDash([5, 3]);\n      }\n\n      this.sketchLine(point.x, point.y, x, 0);\n      this.sketchLine(point.x, point.y, x, this.canvasRef.height);\n    }\n  }\n\n  drawPoint(x, y, temp, lineX) {\n    this.ctx.strokeStyle = temp ? tempColor : defColor;\n    this.ctx.fillStyle = temp ? tempPColor : defColor;\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, 5, 0, 2 * Math.PI);\n    this.ctx.fill();\n\n    if (lineX) {\n      if (temp) {\n        this.ctx.setLineDash([5, 3]);\n      }\n\n      this.sketchLine(x, y, lineX, 0);\n      this.sketchLine(x, y, lineX, this.canvasRef.height);\n    }\n  }\n\n  freePaint(x, y) {\n    if (this.data.free.down) {\n      this.ctx.strokeStyle = freeColor;\n      this.sketchLine(this.data.free.path[this.data.free.path.length - 1].x, this.data.free.path[this.data.free.path.length - 1].y, x, y);\n      this.data.free.path[this.data.free.path.length - 1].push({\n        x,\n        y\n      });\n    }\n  }\n\n  deleteDraws() {\n    this.data.free.path = [[]];\n    this.data.left.lineX = undefined;\n    this.data.left.point = undefined;\n    this.data.right.lineX = undefined;\n    this.data.right.point = undefined;\n    this.drawState();\n  }\n\n  drawPath() {\n    this.ctx.setLineDash([1, 0]);\n    this.ctx.strokeStyle = freeColor;\n    this.data.free.path.forEach(p => {\n      let last = undefined;\n      p.forEach(({\n        x,\n        y\n      }) => {\n        if (last) {\n          this.sketchLine(last.x, last.y, x, y);\n        }\n\n        last = {\n          x,\n          y\n        };\n      });\n    });\n  }\n\n  mouseOverHandler(e) {\n    const x = e.nativeEvent.offsetX;\n    const y = e.nativeEvent.offsetY;\n    this.drawState();\n\n    switch (this.action) {\n      case 1:\n        this.drawLine(x, true, this.side.point);\n        break;\n\n      case 2:\n        this.drawPoint(x, y, true, this.side.lineX);\n        break;\n\n      case 3:\n        this.freePaint(x, y);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  mouseClickHandler(e) {\n    const x = e.nativeEvent.offsetX;\n    const y = e.nativeEvent.offsetY;\n\n    switch (this.action) {\n      case 1:\n        this.side.lineX = x;\n        break;\n\n      case 2:\n        this.side.point = {\n          x,\n          y\n        };\n        break;\n\n      default:\n        break;\n    }\n\n    if (this.action === 1 || this.action === 2) {\n      this.drawState();\n      this.updateAngle();\n    }\n  }\n\n  mouseDownUpHandler(act) {\n    return e => {\n      const x = e.nativeEvent.offsetX;\n      const y = e.nativeEvent.offsetY;\n\n      if (this.action === 3) {\n        if (act) {\n          this.data.free.path[this.data.free.path.length - 1].push({\n            x,\n            y\n          });\n        } else {\n          this.data.free.path.push([]);\n        }\n\n        this.data.free.down = act;\n      }\n    };\n  }\n\n  setAction(action) {\n    if (action === 4) {\n      this.deleteDraws();\n      this.action = 0;\n    } else {\n      this.action = this.action === action ? 0 : action;\n    }\n  }\n\n  updateAngle() {\n    if (this.side.lineX && this.side.point) {\n      const b = this.canvasRef.height;\n      const p1 = {\n        x: this.side.lineX,\n        y: b\n      };\n      const p2 = {\n        x: this.side.point.x,\n        y: this.side.point.y\n      };\n      const c = Math.sqrt((p1.x - p2.x) ** 2 + p2.y ** 2);\n      const a = Math.sqrt((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2);\n      const thetaRads = Math.acos((a ** 2 + b ** 2 - c ** 2) / (2 * a * b));\n      this.infoRef.update(this.side === this.data.left ? 0 : 1, Math.round(thetaRads * 180 / Math.PI * 100) / 100);\n    }\n  }\n\n  onSideChange(side) {\n    if (side) {\n      this.side = this.data.right;\n    } else {\n      this.side = this.data.left;\n    }\n  }\n\n  takePicture() {\n    this.ctx.clearRect(0, 0, this.rect.width + 20, this.rect.height + 20);\n    this.ctx.drawImage(this.videoRef, 0, 0, this.rect.width, this.rect.height);\n    const imgData = this.canvasRef.toDataURL('image/png');\n    this.imgRef.setAttribute('src', imgData);\n    this.imgRef.classList.remove('hidden');\n    this.drawState();\n  }\n\n  cancelPicture() {\n    this.imgRef.removeAttribute('src');\n    this.imgRef.classList.add('hidden');\n  }\n\n  savePicture() {\n    this.props.savePhoto({\n      image: this.imgRef.src,\n      data: {\n        left: {\n          point: this.data.left.point,\n          lineX: this.data.left.lineX\n        },\n        right: {\n          point: this.data.right.point,\n          lineX: this.data.right.lineX\n        },\n        free: {\n          path: this.data.free.path\n        }\n      },\n      extra: this.infoRef.getState()\n    });\n  }\n\n  resetInfo() {\n    this.action = 0;\n    this.data = this.getDefaultData();\n    this.side = this.data.left;\n    this.drawState();\n    this.setImg({\n      image: null\n    });\n    this.infoRef.resetInfo();\n    this.downRef.reset(false);\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(Info, {\n      ref: r => this.infoRef = r,\n      onSideChange: this.onSideChange.bind(this),\n      threshold: this.props.threshold,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direcction: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      id: \"canvas-video-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(Box, {\n      component: \"img\",\n      ref: r => this.imgRef = r,\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }), React.createElement(Box, {\n      component: \"video\",\n      ref: r => this.videoRef = r,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), React.createElement(Box, {\n      component: \"canvas\",\n      ref: r => this.canvasRef = r,\n      onMouseMove: this.mouseOverHandler.bind(this),\n      onClick: this.mouseClickHandler.bind(this),\n      onMouseDown: this.mouseDownUpHandler(true),\n      onMouseUp: this.mouseDownUpHandler(false),\n      onMouseOut: this.drawState.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(Side, {\n      setAction: this.setAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      item: true,\n      direcction: \"row\",\n      xs: 11,\n      id: \"bottom-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(Down, {\n      takePicture: this.takePicture,\n      cancelPicture: this.cancelPicture,\n      savePicture: this.savePicture,\n      patientCedula: this.props.patientCedula,\n      ref: r => this.downRef = r,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }))));\n  }\n\n}\nCamCanvas.propTypes = {\n  savePhoto: PropTypes.func.isRequired,\n  patientCedula: PropTypes.string.isRequired,\n  threshold: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["D:/podoscope/src/mainView/Cam/CamCanvas.jsx"],"names":["React","PropTypes","Grid","Box","Info","Side","Down","tempColor","tempPColor","defColor","freeColor","CamCanvas","Component","constructor","props","canvasRef","createRef","videoRef","imgRef","infoRef","downRef","setAction","bind","mouseDownUpHandler","takePicture","cancelPicture","savePicture","updateDimension","action","rect","undefined","data","getDefaultData","side","left","componentDidMount","getBoundingClientRect","width","ctx","getContext","constraints","video","audio","console","log","navigator","mediaDevices","getUserMedia","then","mediaStream","setTheVideoStuff","catch","err","name","message","srcObject","setTimeout","play","window","addEventListener","componentWillUnmount","removeEventListener","lineX","point","right","free","down","path","extra","angle","height","drawState","setImg","image","classList","remove","src","removeAttribute","add","reset","updateState","drawSide","drawLine","drawPoint","x","y","line","clearRect","drawPath","sketchLine","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke","temp","strokeStyle","setLineDash","fillStyle","arc","Math","PI","fill","freePaint","length","push","deleteDraws","forEach","p","last","mouseOverHandler","e","nativeEvent","offsetX","offsetY","mouseClickHandler","updateAngle","act","b","p1","p2","c","sqrt","a","thetaRads","acos","update","round","onSideChange","drawImage","imgData","toDataURL","setAttribute","savePhoto","getState","resetInfo","render","r","threshold","patientCedula","propTypes","func","isRequired","string","object"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid, Box } from '@material-ui/core';\r\nimport Info from './Info/Info';\r\nimport Side from './Side/Side';\r\nimport Down from './Down/Down';\r\nimport './CamCanvas.css';\r\n\r\nconst tempColor = 'red';\r\nconst tempPColor = 'yellow';\r\nconst defColor = 'cyan';\r\nconst freeColor = 'blue';\r\n\r\nexport default class CamCanvas extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvasRef = React.createRef();\r\n    this.videoRef = React.createRef();\r\n    this.imgRef = React.createRef();\r\n    this.infoRef = React.createRef();\r\n    this.downRef = React.createRef();\r\n\r\n    this.setAction = this.setAction.bind(this);\r\n    this.mouseDownUpHandler = this.mouseDownUpHandler.bind(this);\r\n    this.takePicture = this.takePicture.bind(this);\r\n    this.cancelPicture = this.cancelPicture.bind(this);\r\n    this.savePicture = this.savePicture.bind(this);\r\n    this.updateDimension = this.updateDimension.bind(this);\r\n\r\n    this.action = 0;\r\n    this.rect = undefined;\r\n    this.data = this.getDefaultData();\r\n    this.side = this.data.left;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.rect = this.canvasRef.getBoundingClientRect();\r\n    this.videoRef.width = this.rect.width;\r\n    this.rect = this.videoRef.getBoundingClientRect();\r\n    this.ctx = this.canvasRef.getContext('2d');\r\n\r\n    let constraints = { video: true, audio: false };\r\n    console.log(this);\r\n\r\n    navigator.mediaDevices.getUserMedia(constraints)\r\n    .then((mediaStream) => this.setTheVideoStuff(mediaStream))\r\n    .catch(function(err) { console.log(\"An error ocurred: \" + err.name + \": \" + err.message); });\r\n  }\r\n\r\n  setTheVideoStuff(mediaStream){\r\n      this.videoRef.srcObject = mediaStream;\r\n      console.log('ref set.');\r\n\r\n\r\n      setTimeout(() => {\r\n        this.videoRef.play();\r\n        this.updateDimension();\r\n        window.addEventListener('resize', this.updateDimension);\r\n      }, 500);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateDimension);\r\n  }\r\n\r\n  getDefaultData() {\r\n    return {\r\n      left: {\r\n        lineX: undefined,\r\n        point: undefined\r\n      },\r\n      right: {\r\n        lineX: undefined,\r\n        point: undefined\r\n      },\r\n      free: {\r\n        down: false,\r\n        path: [[]]\r\n      },\r\n      extra: {\r\n        left: { angle: undefined },\r\n        right: { angle: undefined }\r\n      }\r\n    };\r\n  }\r\n\r\n  updateDimension() {\r\n    this.rect = this.videoRef.getBoundingClientRect();\r\n    this.canvasRef.height = this.rect.height;\r\n    this.canvasRef.width = this.rect.width;\r\n    this.imgRef.height = this.rect.height;\r\n    this.imgRef.width = this.rect.width;\r\n    this.drawState();\r\n  }\r\n\r\n  setImg(data) {\r\n    if (data.image) {\r\n      this.imgRef.classList.remove('hidden');\r\n      this.imgRef.src = data.image;\r\n    } else {\r\n      this.imgRef.removeAttribute('src');\r\n      this.imgRef.classList.add('hidden');\r\n    }\r\n    this.data = data.data || this.getDefaultData();\r\n\r\n    this.downRef.reset(!!data.image);\r\n\r\n    this.side = this.data.left;\r\n    this.infoRef.updateState(data.extra);\r\n    this.drawState();\r\n  }\r\n\r\n  // draws lines and points of both feet and draws path\r\n  drawState() {\r\n    const drawSide = (side) => {\r\n      if (side.lineX) {\r\n        this.drawLine(side.lineX, false, side.point);\r\n      }\r\n      if (side.point) {\r\n        this.drawPoint(side.point.x, side.point.y, false, side.line);\r\n      }\r\n    };\r\n\r\n    this.ctx.clearRect(0, 0, this.rect.width + 20, this.rect.height + 20);\r\n    this.drawPath();\r\n    drawSide(this.data.left);\r\n    drawSide(this.data.right);\r\n  }\r\n\r\n  sketchLine(x1, y1, x2, y2) {\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(x1, y1);\r\n    this.ctx.lineTo(x2, y2);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  drawLine(x, temp, point) {\r\n    this.ctx.strokeStyle = temp ? tempColor : defColor;\r\n    if (temp) {\r\n      this.ctx.setLineDash([5, 3]);\r\n    } else {\r\n      this.ctx.setLineDash([1, 0]);\r\n    }\r\n    //+20 to avoid white space just before border of canvas\r\n    this.sketchLine(x, 0, x, this.rect.height + 20);\r\n\r\n    if (point) {\r\n      if (temp) {\r\n        this.ctx.setLineDash([5, 3]);\r\n      }\r\n      this.sketchLine(point.x, point.y, x, 0);\r\n      this.sketchLine(point.x, point.y, x, this.canvasRef.height);\r\n    }\r\n  }\r\n\r\n  drawPoint(x, y, temp, lineX) {\r\n    this.ctx.strokeStyle = temp ? tempColor : defColor;\r\n    this.ctx.fillStyle = temp ? tempPColor : defColor;\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(x, y, 5, 0, 2 * Math.PI);\r\n    this.ctx.fill();\r\n\r\n    if (lineX) {\r\n      if (temp) {\r\n        this.ctx.setLineDash([5, 3]);\r\n      }\r\n      this.sketchLine(x, y, lineX, 0);\r\n      this.sketchLine(x, y, lineX, this.canvasRef.height);\r\n    }\r\n  }\r\n\r\n  freePaint(x, y) {\r\n    if (this.data.free.down) {\r\n      this.ctx.strokeStyle = freeColor;\r\n      this.sketchLine(\r\n        this.data.free.path[this.data.free.path.length - 1].x,\r\n        this.data.free.path[this.data.free.path.length - 1].y,\r\n        x, y);\r\n      this.data.free.path[this.data.free.path.length - 1].push({ x, y });\r\n    }\r\n  }\r\n\r\n  deleteDraws() {\r\n    this.data.free.path = [[]];\r\n    this.data.left.lineX = undefined;\r\n    this.data.left.point = undefined;\r\n    this.data.right.lineX = undefined;\r\n    this.data.right.point = undefined;\r\n    this.drawState();\r\n  }\r\n\r\n  drawPath() {\r\n    this.ctx.setLineDash([1, 0]);\r\n    this.ctx.strokeStyle = freeColor;\r\n\r\n    this.data.free.path.forEach(p => {\r\n      let last = undefined;\r\n      p.forEach(({ x, y }) => {\r\n        if (last) {\r\n          this.sketchLine(last.x, last.y, x, y);\r\n        }\r\n        last = { x, y };\r\n      });\r\n    });\r\n  }\r\n\r\n  mouseOverHandler(e) {\r\n    const x = e.nativeEvent.offsetX;\r\n    const y = e.nativeEvent.offsetY;\r\n\r\n    this.drawState();\r\n    switch (this.action) {\r\n      case 1:\r\n        this.drawLine(x, true, this.side.point);\r\n        break;\r\n      case 2:\r\n        this.drawPoint(x, y, true, this.side.lineX);\r\n        break;\r\n      case 3:\r\n        this.freePaint(x, y);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  mouseClickHandler(e) {\r\n    const x = e.nativeEvent.offsetX;\r\n    const y = e.nativeEvent.offsetY;\r\n\r\n    switch (this.action) {\r\n      case 1:\r\n        this.side.lineX = x;\r\n        break;\r\n      case 2:\r\n        this.side.point = { x, y };\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (this.action === 1 || this.action === 2) {\r\n      this.drawState();\r\n      this.updateAngle();\r\n    }\r\n  }\r\n\r\n  mouseDownUpHandler(act) {\r\n    return (e) => {\r\n      const x = e.nativeEvent.offsetX;\r\n      const y = e.nativeEvent.offsetY;\r\n\r\n      if (this.action === 3) {\r\n        if (act) {\r\n          this.data.free.path[this.data.free.path.length - 1].push({ x, y });\r\n        } else {\r\n          this.data.free.path.push([]);\r\n        }\r\n        this.data.free.down = act;\r\n      }\r\n    };\r\n  }\r\n\r\n  setAction(action) {\r\n    if (action === 4) {\r\n      this.deleteDraws();\r\n      this.action = 0;\r\n    } else {\r\n      this.action = (this.action === action ? 0 : action);\r\n    }\r\n  }\r\n\r\n  updateAngle() {\r\n    if (this.side.lineX && this.side.point) {\r\n      const b = this.canvasRef.height;\r\n      const p1 = { x: this.side.lineX, y: b };\r\n      const p2 = { x: this.side.point.x, y: this.side.point.y };\r\n\r\n      const c = Math.sqrt((p1.x - p2.x) ** 2 + (p2.y) ** 2);\r\n      const a = Math.sqrt((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2);\r\n\r\n      const thetaRads = Math.acos(((a ** 2) + (b ** 2) - (c ** 2)) / (2 * a * b));\r\n\r\n      this.infoRef.update(this.side === this.data.left ? 0 : 1, Math.round((thetaRads * 180 / Math.PI) * 100) / 100);\r\n    }\r\n  }\r\n\r\n  onSideChange(side) {\r\n    if (side) {\r\n      this.side = this.data.right;\r\n    } else {\r\n      this.side = this.data.left;\r\n    }\r\n  }\r\n\r\n  takePicture() {\r\n    this.ctx.clearRect(0, 0, this.rect.width + 20, this.rect.height + 20);\r\n    this.ctx.drawImage(this.videoRef, 0, 0, this.rect.width, this.rect.height);\r\n    const imgData = this.canvasRef.toDataURL('image/png');\r\n    \r\n    this.imgRef.setAttribute('src', imgData);\r\n    this.imgRef.classList.remove('hidden');\r\n    this.drawState();\r\n  }\r\n\r\n  cancelPicture() {\r\n    this.imgRef.removeAttribute('src');\r\n    this.imgRef.classList.add('hidden');\r\n  }\r\n\r\n  savePicture() {\r\n    this.props.savePhoto({\r\n      image: this.imgRef.src,\r\n      data: {\r\n        left: {\r\n          point: this.data.left.point,\r\n          lineX: this.data.left.lineX\r\n        },\r\n        right: {\r\n          point: this.data.right.point,\r\n          lineX: this.data.right.lineX\r\n        },\r\n        free: {\r\n          path: this.data.free.path\r\n        }\r\n      },\r\n      extra: this.infoRef.getState()\r\n    });\r\n  }\r\n\r\n  resetInfo() {\r\n    this.action = 0;\r\n    this.data = this.getDefaultData();\r\n    this.side = this.data.left;\r\n\r\n    this.drawState();\r\n    this.setImg({ image: null });\r\n    this.infoRef.resetInfo();\r\n    this.downRef.reset(false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid container direction=\"column\">\r\n        <Grid item xs={11}>\r\n          <Info ref={r => this.infoRef = r} onSideChange={this.onSideChange.bind(this)} threshold={this.props.threshold} />\r\n        </Grid >\r\n        <Grid item>\r\n          <Grid container direcction=\"row\">\r\n            <Grid item xs={11} id=\"canvas-video-container\">\r\n              <Box\r\n                component=\"img\"\r\n                ref={r => this.imgRef = r}\r\n                className='hidden' />\r\n              <Box\r\n                component=\"video\"\r\n                ref={r => this.videoRef = r} />\r\n              <Box\r\n                component=\"canvas\"\r\n                ref={r => this.canvasRef = r}\r\n                onMouseMove={this.mouseOverHandler.bind(this)}\r\n                onClick={this.mouseClickHandler.bind(this)}\r\n                onMouseDown={this.mouseDownUpHandler(true)}\r\n                onMouseUp={this.mouseDownUpHandler(false)}\r\n                onMouseOut={this.drawState.bind(this)} />\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <Side setAction={this.setAction} />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item direcction=\"row\" xs={11} id=\"bottom-container\">\r\n            <Down\r\n              takePicture={this.takePicture}\r\n              cancelPicture={this.cancelPicture}\r\n              savePicture={this.savePicture}\r\n              patientCedula={this.props.patientCedula}\r\n              ref={r => this.downRef = r} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nCamCanvas.propTypes = {\r\n  savePhoto: PropTypes.func.isRequired,\r\n  patientCedula: PropTypes.string.isRequired,\r\n  threshold: PropTypes.object.isRequired\r\n};\r\n"]},"metadata":{},"sourceType":"module"}