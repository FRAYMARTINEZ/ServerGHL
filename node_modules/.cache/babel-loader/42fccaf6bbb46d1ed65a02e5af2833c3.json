{"ast":null,"code":"var _jsxFileName = \"D:\\\\podoscope\\\\src\\\\mainView\\\\UserInfo\\\\ImageSelection.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Typography } from '@material-ui/core';\nimport ImageCard from './ImageCard/ImageCard';\nexport default class ImageSelection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selection: -1\n    };\n    this.changeSelection = this.changeSelection.bind(this);\n    this.imgsRefs = [React.createRef(), React.createRef(), React.createRef(), React.createRef(), React.createRef(), React.createRef()];\n  }\n\n  changeSelection(id) {\n    this.setState({\n      selection: id\n    }, () => {\n      this.props.selectImage(id);\n    });\n  }\n\n  updateImage(i, img) {\n    this.imgsRefs[i].updateImage(img);\n  }\n\n  setImageToDefault(i) {\n    console.log(`In selection ref, setting image ${i} to default.`);\n    this.imgsRefs[i].setImageToDefaultImage();\n  }\n\n  makeImageCard(cardId, caption) {\n    return React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(ImageCard, {\n      ref: r => this.imgsRefs[cardId] = r,\n      changeSelect: this.changeSelection,\n      cardId: cardId,\n      selection: this.state.selection,\n      cardCaption: caption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n  makeCaption(caption, variant = 'body2', size = 3, align = 'center') {\n    return React.createElement(Grid, {\n      item: true,\n      xs: size,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: align,\n      variant: variant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, caption));\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, this.makeCaption('Back', 'subtitle1', 2), this.makeImageCard(0, 'Standing Up'), this.makeImageCard(1, '45 째'), this.makeImageCard(2, 'Toes up'), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), this.makeCaption('Standing Up'), this.makeCaption('45 째'), this.makeCaption('Toes up')), React.createElement(React.Fragment, null, this.makeCaption('Front', 'subtitle1', 2), this.makeImageCard(3, 'Chaplin'), this.makeImageCard(4, 'Chaplin Toes Up'), this.makeImageCard(5, 'With Insoles'), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), this.makeCaption('Chaplin'), this.makeCaption(React.createElement(React.Fragment, null, \"Chaplin\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), \"Toes Up\")), this.makeCaption('With Insoles')));\n  }\n\n}\nImageSelection.propTypes = {\n  selectImage: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["D:/podoscope/src/mainView/UserInfo/ImageSelection.jsx"],"names":["React","Component","PropTypes","Grid","Typography","ImageCard","ImageSelection","constructor","props","state","selection","changeSelection","bind","imgsRefs","createRef","id","setState","selectImage","updateImage","i","img","setImageToDefault","console","log","setImageToDefaultImage","makeImageCard","cardId","caption","r","makeCaption","variant","size","align","render","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nimport ImageCard from './ImageCard/ImageCard';\r\n\r\nexport default class ImageSelection extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { selection: -1 };\r\n    this.changeSelection = this.changeSelection.bind(this);\r\n\r\n    this.imgsRefs = [\r\n      React.createRef(), React.createRef(), React.createRef(),\r\n      React.createRef(), React.createRef(), React.createRef()\r\n    ];\r\n  }\r\n\r\n  changeSelection(id) {\r\n    this.setState({ selection: id },\r\n      () => {\r\n        this.props.selectImage(id);\r\n      });\r\n  }\r\n\r\n  updateImage(i, img) {\r\n    this.imgsRefs[i].updateImage(img);\r\n  }\r\n  \r\n  setImageToDefault(i){\r\n    console.log(`In selection ref, setting image ${i} to default.`)\r\n    this.imgsRefs[i].setImageToDefaultImage();\r\n  }\r\n\r\n  makeImageCard(cardId, caption) {\r\n    return (\r\n      <Grid item xs={3}>\r\n        <ImageCard\r\n          ref={r => this.imgsRefs[cardId] = r}\r\n          changeSelect={this.changeSelection}\r\n          cardId={cardId}\r\n          selection={this.state.selection}\r\n          cardCaption={caption} />\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  makeCaption(caption, variant = 'body2', size = 3, align = 'center') {\r\n    return (\r\n      <Grid item xs={size}>\r\n        <Typography align={align} variant={variant}>\r\n          {caption}\r\n        </Typography>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid container spacing={2} alignItems='center'>\r\n        <>\r\n          {this.makeCaption('Back', 'subtitle1', 2)}\r\n\r\n          {this.makeImageCard(0, 'Standing Up')}\r\n          {this.makeImageCard(1, '45 째')}\r\n          {this.makeImageCard(2, 'Toes up')}\r\n\r\n          <Grid item xs={2} />\r\n          \r\n          {this.makeCaption('Standing Up')}\r\n          {this.makeCaption('45 째')}\r\n          {this.makeCaption('Toes up')}\r\n        </>\r\n        <>\r\n          {this.makeCaption('Front', 'subtitle1', 2)}\r\n\r\n          {this.makeImageCard(3, 'Chaplin')}\r\n          {this.makeImageCard(4, 'Chaplin Toes Up')}\r\n          {this.makeImageCard(5, 'With Insoles')}\r\n\r\n          <Grid item xs={2} />\r\n\r\n          {this.makeCaption('Chaplin')}\r\n          {this.makeCaption(<>Chaplin<br />Toes Up</>)}\r\n          {this.makeCaption('With Insoles')}\r\n        </>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nImageSelection.propTypes = {\r\n  selectImage: PropTypes.func.isRequired\r\n};\r\n"]},"metadata":{},"sourceType":"module"}